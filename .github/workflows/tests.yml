name: unit test auto

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: debug
      run: |
        pwd
        ls
    - name: Install dependencies
      run: |
        pip install numpy
        pip install numba
        pip install h5py
        pip install matplotlib
        pip install scipy
        pip install pytest
        sudo apt-get install libopenmpi-dev
        pip install mpi4py
        pip list
        pip install -e .
#        wget https://github.com/mpi4py/mpi4py/releases/download/3.1.4/mpi4py-3.1.4.tar.gz
#        tar -zxf mpi4py-3.1.4.tar.gz
#        cd mpi4py-3.1.4
#        python setup.py install
#        cd ..
    - name: Run Unit Tests
      run: |
        cd test/regression
        python run.py
        python run.py --mode=numba
        # python run.py --srun=5
        # python run.py --srun=5 --mode=numba

#jobs:
#  lint:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - uses: psf/black@stable

# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

#name: pep8 check

#on:
#  push:
#    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]

#permissions:
#  contents: read

#jobs:
#  check:

#    runs-on: ubuntu-latest

#    steps:
#    - uses: actions/checkout@v3
#    - name: Set up Python 3.10
#      uses: actions/setup-python@v3
#      with:
#        python-version: "3.10"
#    - name: Install dependencies
#      run: |
#        python -m pip install --upgrade pip
#        python -m pip install pycodestyle
#    - name: Pep8 Check
#      run: |
#        ls
#        pwd
#        lscpu
#        pycodestyle mcdc
